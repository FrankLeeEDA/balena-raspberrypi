From f99053d6e5dc532d904c970c70024bd42b7b02a7 Mon Sep 17 00:00:00 2001
From: Alexandru Costache <alexandru@balena.io>
Date: Mon, 20 Jul 2020 14:42:36 +0200
Subject: [PATCH] rpi4: Add a retry limit when writing to uart console

Seems that if the serial console is incorrectly
configured in the dtb, writing to it may block indefinitely,
thus preventing the board from booting.

Let's add a retry count to unblock in such cases.

Re-based for u-boot v2020.07 onwards

Upstream-status: Inappropriate [configuration]
Signed-off-by: Alexandru Costache <alexandru@balena.io>
---
 drivers/serial/serial_bcm283x_mu.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/serial/serial_bcm283x_mu.c b/drivers/serial/serial_bcm283x_mu.c
index 0102b10ed2..d9b6f0febf 100644
--- a/drivers/serial/serial_bcm283x_mu.c
+++ b/drivers/serial/serial_bcm283x_mu.c
@@ -51,6 +51,7 @@ struct bcm283x_mu_priv {
 	struct bcm283x_mu_regs *regs;
 };
 
+static uint16_t putc_retry;
 static int bcm283x_mu_serial_getc(struct udevice *dev);
 
 static int bcm283x_mu_serial_setbrg(struct udevice *dev, int baudrate)
@@ -96,8 +97,14 @@ static int bcm283x_mu_serial_putc(struct udevice *dev, const char data)
 	struct bcm283x_mu_regs *regs = priv->regs;
 
 	/* Wait until there is space in the FIFO */
-	if (!(readl(&regs->lsr) & BCM283X_MU_LSR_TX_EMPTY))
-		return -EAGAIN;
+	if (!(readl(&regs->lsr) & BCM283X_MU_LSR_TX_EMPTY)) {
+		if (++putc_retry) {
+			return -EAGAIN;
+		} else {
+			/* Couldn't write for too long, drop char */
+			return 0;
+		}
+	}
 
 	/* Send the character */
 	writel(data, &regs->io);
-- 
2.17.1

